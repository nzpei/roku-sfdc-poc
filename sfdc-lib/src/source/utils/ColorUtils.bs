namespace ColorUtils
    function HexToInt(color as dynamic) as integer
        if color = invalid
            return 0
        end if
        if color.left(1) = "#"
            color = color.mid(1)
        end if

        value = Val(color.mid(0, 2), 16) * 16777216 + Val(color.mid(2, 2), 16) * 65536 + Val(color.mid(4, 2), 16) * 256
        if color.Len() = 6
            value += 255
        else if color.Len() = 8
            value += Val(color.mid(6, 2), 16)
        end if

        return value
    end function

    function IntToHex(color as integer) as string
        hexDigits = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F"]
        hexString = "#"

        for i = 7 to 0 step -1
            hexString = hexString + hexDigits[(color >> (i * 4)) and &hF]
        end for

        return hexString
    end function

    function RgbaToInt(r as integer, g as integer, b as integer, a = 255 as integer) as integer
        return r * 16777216 + g * 65536 + b * 256 + a
    end function

    function RandomColorInt() as integer
        return RgbaToInt(Rnd(256), Rnd(256), Rnd(256))
    end function

    function RandomSoftColorInt() as integer
        return RgbaToInt(Rnd(100) + 100, Rnd(100) + 100, Rnd(100) + 100)
    end function

end namespace
